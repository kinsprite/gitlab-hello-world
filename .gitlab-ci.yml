# This file is a template, and might need editing before it works on your project.
image: golang:1.12.7-alpine3.10

variables:
  # Please edit to your GitLab project
  REPO_NAME: 192.168.80.113/ksqzq/hello-world

before_script:
  - cd $CI_PROJECT_DIR
  - export GOPROXY=https://goproxy.io
  - export GIN_MODE=release
  - export CGO_ENABLED=0
  - export GO111MODULE=on

stages:
  - test
  - build
  - docker_image
  - deploy

testing_job:
  stage: test
  tags: [docker]
  script:
    - echo this is testing...
    - go mod vendor
    - go vet -mod=vendor .
    - go test -mod=vendor .
    #- go test .
    #- go fmt $(go list ./... | grep -v /vendor/)
    #- go vet $(go list ./... | grep -v /vendor/)
    #- go test -race $(go list ./... | grep -v /vendor/)

testing_job2:
  stage: test
  tags: [docker]
  script:
    - echo testing job 2...

compiling_job:
  stage: build
  tags: [docker]
  script:
    - echo this is compiling...
    - go mod vendor
    - go build -mod=vendor -tags=jsoniter -o gitlab-hello-world .
    #- go build -tags=jsoniter -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/gitlab-hello-world
  #artifacts:
  #  paths:
  #    - gitlab-hello-world
  
building_job:
  image: docker:stable
  stage: docker_image
  tags: [docker]
  script:
    - echo this is building docker image...
    - docker build -t gitlab-hello-world-image .
    #- docker tag ...
    #- docker push ...
